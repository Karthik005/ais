#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usepackage{listings}
\usetheme{Warsaw}
% or ...
%\usetheme{Antibes}	% tree outline, neat
%\usetheme{JuanLesPins}	% like Antibes, with shading
%\usetheme{Bergen}	% outline on side
%\usetheme{Luebeck}	% like Warsaw, square sides
%\usetheme{Berkeley}	% interesting left bar outline
%\usetheme{Madrid}	% clean, nice.  7/12 page numbers
%\usetheme{Berlin}	% dots show slide number
%\usetheme{Malmoe}	% OK, plain, unshaded
%\usetheme{Boadilla}	% nice, white bg, no top bar
%\usetheme{Marburg}	% nice, outline on right
%\usetheme{boxes}	% ???
%\usetheme{Montpellier}	% tree outline on top, plainish white
%\usetheme{Copenhagen}	% like Warsaw
%\usetheme{PaloAlto}	% looks good
%\usetheme{Darmstadt}	% like Warsaw with circle outline
%\usetheme{Pittsburgh}
%\usetheme{default}
%\usetheme{Rochester}	% like boxy, unshaded warsaw
%\usetheme{Dresden}	% circle outline on top
%\usetheme{Singapore}	% purple gradient top
%\usetheme{Frankfurt}	% like Warsaw with circle outline on top
%\usetheme{Szeged}
%\usetheme{Goettingen}	% light purple right bar outline
%\usetheme{Warsaw}
%\usetheme{Hannover}	% like Goett with bar on left
%\usetheme{compatibility}
%\usetheme{Ilmenau}

\setbeamercovered{transparent}
% or whatever (possibly just delete it)

%\usecolortheme{seahorse}
%\usecolortheme{rose}

% seems to fix typewriter font in outline header:
\usepackage{ae,aecompl}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 0
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Artificial Immune System
\end_layout

\begin_layout Author
Karthik.S
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

Chandan Yeshwanth
\begin_inset Argument
status collapsed

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
place handout in layout->document->layout->options to suppress overlays
 for printing
\end_layout

\begin_layout Plain Layout
now, how to eliminate color printing etc.
 for handout printing? need to do pstricks
\end_layout

\begin_layout Plain Layout
why aren't my Lyx Notes or style NoteItems appearing in handout?
\end_layout

\begin_layout Plain Layout
place draft in there to (somewhat) reduce amount of stuff printed, like
 top and bottom border
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{institution-logo-filenameO}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% RPD:  can't get this to work on any template.
  not present in Warsaw any way, it seems
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% hmm, problem seems to be that it isn't copied to the tmp dir, probably
 becuase it doesn't have the
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% filename extension (which is tacked on by pgf it seems)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%  }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Outline
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Section
Clonal Selection Theory
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout BeginFrame
Introduction
\end_layout

\begin_layout Itemize
B-lymphocytes: possess receptors, produce antibodies
\end_layout

\begin_layout Itemize
T-lymphocytes: More diversified
\end_layout

\begin_deeper
\begin_layout Itemize
Only helper T-cells relevant in B-cell reaction
\end_layout

\end_deeper
\begin_layout Itemize
Receptors: sensors on B-cell surface
\end_layout

\begin_layout Itemize
Antigen: structure that causes an immune response
\end_layout

\begin_layout Itemize
Antibody: neutralizes pathogens; unique to an antigen
\end_layout

\begin_layout Itemize
Each B-cell can produce antibodies of a single variety
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
B-cell Response Mechanism
\end_layout

\begin_layout Itemize

\end_layout

\begin_layout Itemize
T-lymphocytes: More diversified
\end_layout

\begin_deeper
\begin_layout Itemize
Only helper T-cells relevant in B-cell reaction
\end_layout

\end_deeper
\begin_layout Itemize
Receptors: sensors on B-cell surface
\end_layout

\begin_layout Itemize
Antigen: structure that causes an immune response
\end_layout

\begin_layout Itemize
Antibody: neutralizes pathogens; unique to an antigen
\end_layout

\begin_layout Itemize
Each B-cell can produce antibodies of a single variety
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Subsection
Network layer attacks
\end_layout

\begin_layout BeginFrame
ICMP flood
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Also known as smurf attack
\end_layout

\begin_layout Itemize
Exploits misconfigured network devices that allow packets to be sent to
 all hosts via the broadcast address of the network
\end_layout

\begin_layout Itemize
Attacker sends large numbers of IP packets with the source address faked
 to appear to be the address of the victim
\end_layout

\begin_layout Itemize
Nuke: send malformed ICMP packets
\end_layout

\begin_layout Itemize
Ping flood, Ping of Death (Malformed packet)
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
SYN Flood
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Server sent a flood of TCP/SYN packets with forged sender addresses
\end_layout

\begin_layout Itemize
Server sends ACK packet and waits for a response
\end_layout

\begin_layout Itemize
Response never arrives due to forged sender
\end_layout

\begin_layout Itemize
Half-open connections cause unavailability
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Teardrop Attack
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Attacker sends mangled IP fragments with overlapping over-sized payloads
\end_layout

\begin_layout Itemize
Exploits bug in TCP/IP fragmentation reassembly code in earlier OS's
\end_layout

\begin_layout Itemize
OS crashes as result of attack
\end_layout

\begin_layout Itemize
Vulnerable OS's: Windows 3.1x, Windows 95, Windows NT, Linux kernels prior
 to version 2.1.63
\end_layout

\begin_layout Itemize
Phlashing: attack hardware
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
LAND attack
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Stands for Local Area Network Denial
\end_layout

\begin_layout Itemize
Send spoofed packet to target machine with source and destination IP set
 to target's
\end_layout

\begin_layout Itemize
Causes infinite loop
\end_layout

\begin_layout Itemize
Poisoned packet causes system to lock up
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
P2P attack
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Peer-to-peer servers controlled
\end_layout

\begin_layout Itemize
No botnet, attacker does not communicate directly with clients
\end_layout

\begin_layout Itemize
Acts as a puppet master: makes clients to connect to victim's system
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout Subsection
Application layer attacks
\begin_inset Note Note
status collapsed

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Design goals
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Slow Send/Read Attacks
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
HTTP POST DDoS: Send legitimate POST header with large 'Content-length'.
 Send content at extremely slow rate 
\end_layout

\begin_layout Itemize
R-U-Dead-Yet (RUDY): Keep open multiple HTTP POST sessions open using arbitraril
y large 'Content-length'
\end_layout

\begin_layout Itemize
Slow read: Request sent at regular speeds, responses read slowly, using
 small TCP Receive Window size
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Flood attacks
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Send large number of packets of a particular type of application layer protocol
 (HTTP, Telnet etc.)
\end_layout

\begin_layout Itemize
Causes that particular port/application to crash
\end_layout

\begin_layout Itemize
Eg: Keep connections open, fill target's disk space with logs
\end_layout

\begin_layout Itemize
Banana attack: Redirect outgoing messages from the victim back onto the
 victim; prevent outside access
\end_layout

\begin_layout Itemize
Shell-level access: fork processes to make system crash (fork bomb)
\end_layout

\begin_layout Itemize
Reflected/Spoofed attack: Send packets to large number of computers with
 sender address spoofed to victim's IP address
\end_layout

\begin_deeper
\begin_layout Itemize
The computers would respond, flooding the target
\end_layout

\end_deeper
\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout Subsection
Effects
\end_layout

\begin_layout BeginFrame
Effects of DDoS
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Denial of service may cause the following adverse effects
\end_layout

\begin_deeper
\begin_layout Itemize
Leads to huge financial losses if website is of commercial nature
\end_layout

\begin_deeper
\begin_layout Itemize
Eg: Bitcoin was a recent target of a DDoS attack that resulted in a heist
 reportedly worth around USD $105,792,000
\end_layout

\end_deeper
\begin_layout Itemize
If service is of mission critical nature, small delay can have huge ramification
s
\end_layout

\begin_deeper
\begin_layout Itemize
New age ATC's are not protected against DDoS attacks
\end_layout

\end_deeper
\begin_layout Itemize
Inconvenience to legitimate users
\end_layout

\begin_layout Itemize
Hardware failures (in case of Phlashing)
\end_layout

\begin_layout Itemize
Loss of connectivity to the internet
\end_layout

\end_deeper
\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout Subsection
Prevention and mitigation
\end_layout

\begin_layout BeginFrame
Hardware
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Switches: Rate limits and ACL's (Access control lists)
\end_layout

\begin_deeper
\begin_layout Itemize
May additionally have delayed binding, deep packet inspection, bogus IP
 filtering
\end_layout

\begin_layout Itemize
Address SYN floods, content based attacks and dark-addresses respectively
\end_layout

\end_deeper
\begin_layout Itemize
Routers: Rate limits and ACL's
\end_layout

\begin_deeper
\begin_layout Itemize
Not as thorough; easily overwhelmed
\end_layout

\end_deeper
\begin_layout Itemize
Application front end hardware: Hardware filters for packets
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Soft Approaches
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Intrusion Prevention Systems (IPS): Catch packets based on content
\end_layout

\begin_deeper
\begin_layout Itemize
Do not work for legitimate content but bad intent cases (majority)
\end_layout

\end_deeper
\begin_layout Itemize
DDS: DoS Defense System: can block connection-based DoS attacks and those
 with legitimate content but bad intent
\end_layout

\begin_deeper
\begin_layout Itemize
Can identify bad behaviour in addition to bad content
\end_layout

\begin_layout Itemize
Can address both protocol attacks (Teardrop, Ping of death) & Rate-based
 attacks (all floods)
\end_layout

\end_deeper
\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Soft Approaches
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Blackholing and Sinkholing
\end_layout

\begin_deeper
\begin_layout Itemize
Blackholing: all traffic to attacked DNS/IP address redirected to 
\begin_inset Quotes eld
\end_inset

black hole
\begin_inset Quotes erd
\end_inset

 (null interface)
\end_layout

\begin_layout Itemize
Sinkholing: all traffic to attacked DNS/IP address redirected to legitimate
 IP which acts as filter
\end_layout

\end_deeper
\begin_layout Itemize
Scrubbing: Send all traffic to a cleaning center to filter out bad packets/traff
ic
\end_layout

\begin_deeper
\begin_layout Itemize
Service provided mainly by ISP's
\end_layout

\begin_layout Itemize
Recently others have entered the field (Eg: Cloudflare)
\end_layout

\end_deeper
\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout Section
Heartbleed Bug
\end_layout

\begin_layout BeginFrame

\end_layout

\begin_layout Subsection
The Heartbeat Extension
\end_layout

\begin_layout BeginFrame
Heartbeat extension
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Proposed in RFC 6520
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Itemize
Provides a method to test and keep alive secure communication links (SSL/TLS)
\end_layout

\begin_deeper
\begin_layout Itemize
No need to renegotiate the connection each time
\end_layout

\end_deeper
\begin_layout Itemize
Concept itself is secure
\end_layout

\begin_deeper
\begin_layout Itemize
No inherent flaw in the concept
\end_layout

\end_deeper
\begin_layout Itemize
OpenSSL : Open-source implementation of SSL/TLS protocols in C
\end_layout

\begin_deeper
\begin_layout Itemize
Used in Unix-like OS's
\end_layout

\end_deeper
\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Heatbeat extension
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Protocol:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Client sends (message,message_length) to server
\end_layout

\begin_layout Itemize
Server echoes back message to client
\end_layout

\end_deeper
\begin_layout Itemize
Message lenght can be upto 64KB
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout Subsection
Heartbleed bug
\end_layout

\begin_layout BeginFrame
The Bug
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Vulnerability in initial OpenSSL implementation of the extension
\end_layout

\begin_layout Itemize
Discovered independently by Google and Codenomicon
\end_layout

\begin_layout Itemize
Server does not verify message length
\end_layout

\begin_layout Itemize
Attack procedure:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
Attacker sends (msg,msg_len) to server with 
\begin_inset Formula $len(msg)<msg\_len$
\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
Server echoes back msg+data_from_mem
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
\begin_inset Formula $len(data\_from\_mem)=msg\_len-len(msg$
\end_inset

)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\family roman
Server sends random data segment from memory to cover the gap
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Relevant XKCD
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Image
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout Subsection
Possible Leaks
\end_layout

\begin_layout BeginFrame
Information gained
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Through repeated attacks the following information can be gained
\end_layout

\begin_deeper
\begin_layout Itemize
X.509 certificates
\end_layout

\begin_layout Itemize
User names and passwords 
\end_layout

\begin_layout Itemize
Instant messages
\end_layout

\begin_layout Itemize
Private keys
\end_layout

\begin_layout Itemize
Emails
\end_layout

\end_deeper
\begin_layout Itemize

\family roman
Serious breach in security
\end_layout

\begin_layout Itemize
Fixed in subsequent versions
\end_layout

\end_deeper
\begin_layout BeginFrame
References
\end_layout

\begin_layout Block
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Denial of Service Attacks, Q.
 Gu, P.Liu
\end_layout

\begin_layout Itemize
Implementing Pushback: Router-Based Defense Against DDoS Attacks, J.
 Ioannidis, S.M.
 Bellovin
\end_layout

\begin_layout Itemize
Protecting Web Servers from Distributed Denial of Service Attacks, F.Kargl
 et.
 al., University of Ulm
\end_layout

\begin_layout Itemize
Types of DDoS attacks, Advanced Networking Management Lab, Indiana university
 (http://web.archive.org/web/20100914222536/http://anml.iu.edu/ddos/types.html)
\end_layout

\begin_layout Itemize
Denial of Service Attacks, Incapsula (https://www.incapsula.com/ddos/ddos-attacks/
denial-of-service.html)
\end_layout

\begin_layout Itemize
Teardrop attack, IBM ISS (http://www.iss.net/security_center/reference/vuln/Teardr
op%20attack.htm)
\end_layout

\begin_layout Itemize
Heartbleed bug website (http://heartbleed.com)
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\end_body
\end_document
